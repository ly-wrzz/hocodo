<krpano>
	<action name="clear_thumbs">
	
		for(set(r,0), r LT layer.count, inc(r),
			if(layer[get(r)].parent == %1,
				removelayer(get(layer[get(r)].name), true);
				sub(r,2);
			);
		);
		
		addlayer(%1_thumbborder);
		layer[%1_thumbborder].loadstyle(thumbborder_style);	
		
	</action>
	<action name="clear_child">
	
		for(set(r,0), r LT layer.count, inc(r),
			if(layer[get(r)].parent == %1,
				removelayer(get(layer[get(r)].name), true);
				sub(r,2);
			);
		);
		
	</action>

	<action name="skin_nextscene" scope="local" args="indexadd">
		
		add(newsceneindex, scene[get(xml.scene)].index, indexadd);
		
		if(newsceneindex GE 0 AND newsceneindex LT scene.count,
			loadscene(get(scene[get(newsceneindex)].name),,MERGE,OPENBLEND(1.0, 0.0, 0.2, 0.0, linear));
		);
	</action>

	<action name="skin_nextscene_loop" scope="local" args="indexadd">
		add(newsceneindex, scene[get(xml.scene)].index, indexadd);
		sub(lastsceneindex, scene.count, 1);
		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
		loadscene(get(scene[get(newsceneindex)].name),,MERGE,OPENBLEND(1.0, 0.0, 0.2, 0.0, linear));
	</action>

	<action name="close_all_page">
		if(%1 == auto,,init_auto(););
		if(%1 == investor,,init_investor(););
		if(%1 == residfnt,,init_residfnt(););
		if(%1 == home,,init_home(););
		if(%1 == shushuo,,init_shushuo(););
		if(%1 == search,,init_search(););
		if(%1 == tourist,,init_tourist(););
		if(%1 == ui_wslyz,,init_ui_wslyz(););
		if(%1 == ui_wstzz,,init_ui_wstzz(););
		if(%1 == ui_wsjm,,init_ui_wsjm(););
		if(%1 == ui_auto,,init_ui_auto(););
		init_card();
		init_video();
		init_info();
		init_ui_qiandao();
		init_bsdt();
		init_bigmap();
		init_park();
		init_templist();
		init_meisi();
		
		
	</action>


	<!--打开和关闭layer-->
	<action name="openlayer">
		set(layer[%1].alpha,0);
		set(layer[%1].visible,true);
		tween(layer[%1].alpha,1,0.5);
	</action>
	<action name="closelayer">
		tween(layer[%1].alpha,0,0.3,,
		set(layer[%1].visible,false););
	</action>
	<action name="openhotspot">
		set(hotspot[%1].alpha,0);
		set(hotspot[%1].visible,true);
		tween(hotspot[%1].alpha,1,0.5);
	</action>
	<action name="closehotspot">
		tween(hotspot[%1].alpha,0,0.3,,
		set(hotspot[%1].visible,false););
	</action>



	<!--加热点上的名字-->
	
	<action name="add_tip">
		    txtadd(tooltipname, 'tooltip_', get(name));
		    addplugin(get(tooltipname));
		    txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
		    set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
		    set(plugin[get(tooltipname)].align,top);
		    set(plugin[get(tooltipname)].edge,bottom);
		    set(plugin[get(tooltipname)].x,0);
		    set(plugin[get(tooltipname)].oy,-30%);
		    set(plugin[get(tooltipname)].ry,50);
		    set(plugin[get(tooltipname)].autowidth,true);
		    set(plugin[get(tooltipname)].autoheight,true);
		    set(plugin[get(tooltipname)].vcenter,true);
		    set(plugin[get(tooltipname)].background,true);
		    set(plugin[get(tooltipname)].backgroundcolor,0x0b00fd);
		    set(plugin[get(tooltipname)].roundedge,2);
		    set(plugin[get(tooltipname)].backgroundalpha,0.6);
		    set(plugin[get(tooltipname)].padding,5);
		    set(plugin[get(tooltipname)].border,false);
		    set(plugin[get(tooltipname)].glow,0);
		    set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
		    set(plugin[get(addnameimg)].wordwrap,false);
		    
		    
		    if(device.mobile,
		    	set(plugin[get(tooltipname)].css,'text-align:center; color:#cccccc;  font-weight:bold; font-size:16px;');
		    	,
		    	set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF;   font-size:14px;');
		    );
		   
		    if(text == '' OR text === null,
			    copy(plugin[get(tooltipname)].html,scene[get(linkedscene)].title);
		    ,
		    	
		    	copy(plugin[get(tooltipname)].html,text);
		    	
		    );    
		    set(plugin[get(tooltipname)].enabled,false);	
		
	</action>







	<style name="scale_image"	onover.no-desktop=" copy(nowimage,name);
		set(iszoom, true); 
		set(startzoom, true); 
		copy(copy_mousefovchange, control.mousefovchange); 
		copy(copy_touchzoom, control.touchzoom); 
		set(control.mousefovchange, 0); 
		set(control.touchzoom, false); " 

		onout.no-desktop="set(nowimage,null);
		set(iszoom, false); 
		copy(control.mousefovchange, copy_mousefovchange); 
		copy(control.touchzoom, copy_touchzoom); " 

		ondown.no-desktop="onover(); image_ondown_dragging();ondown2" 

		ondown.desktop="image_ondown_dragging();" 

		onup.no-desktop="onout();"/>
		<!--  当鼠标滚轮时控制图片缩放  -->
	<events name="image_zoom_events" keep="true" onmousewheel="image_onmousewheel();"/>

	<action name="image_onmousewheel">

	if(iszoom, 

		if(wheeldelta_touchscale GT 0,
		<!--  触屏缩放  -->
			if(startzoom, 
			set(startzoom,false); 
			copy(start_wheeldelta_touchscale, wheeldelta_touchscale); 
			copy(start_imagescale, layer[get(nowimage)].scale); 
			); 

			div(tmp, wheeldelta_touchscale, start_wheeldelta_touchscale); 
			mul(layer[get(nowimage)].scale, start_imagescale, tmp); 
			

		,
		<!--  鼠标滚轮缩放  -->
			mul(sit,get(wheeldelta),0.05); 
			mul(sit,layer[get(nowimage)].scale); 
			add(layer[get(nowimage)].scale,sit); 

		); 
		if(layer[get(nowimage)].scale GE 3,set(layer[get(nowimage)].scale,3));
		if(layer[get(nowimage)].scale LE 0.5,set(layer[get(nowimage)].scale,0.5));

	);
	</action>

	<!--  简单的控制layer拖拽  -->
	<action name="image_ondown_dragging">
		copy(mstartx, mouse.x); 
		copy(mstarty, mouse.y); 
		copy(lstartx, x); 
		copy(lstarty, y); 
		asyncloop(pressed, 
		calc(x, lstartx + mouse.x - mstartx); 
		calc(y, lstarty + mouse.y - mstarty);
		,
		
		 );

	</action>




	<!-- 滑动功能 -->
	<action name="draglayer_text">
		
		if(%1 != dragging,
			copy(drag_currenty, y);
			copy(drag_stagey, mouse.stagey);
			draglayer_text(dragging,%2,%3);
		  ,
			if(pressed,
				sub(dy, mouse.stagey, drag_stagey);
				add(y1, drag_currenty, dy);
				add(y2, y1, pixelheight);
				sub(y2, %2);
				if(y1 GT 0, set(y1,0));
				if(y2 LT 0, sub(y1,y2));
				copy(y,y1);
				div(hc,pixelheight,%2);
				
				sub(fy,0,y);
				div(fy,fy,hc);
				
				copy(layer[%3].y,fy);
				delayedcall(0, draglayer_text(dragging,%2,%3) );
			  );
		  );
	</action>





	<!--地图提示-->

    <style name="show_tip"  onloaded="addlaytip" onhover="showtip();"  onout="hidtip();" />

    <action name="addlaytip">
            txtadd(tooltipname, 'tooltip_', get(name));
            addplugin(get(tooltipname));
            txtadd(plugin[get(tooltipname)].parent, get(name));
            set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
            set(plugin[get(tooltipname)].align,right);
            set(plugin[get(tooltipname)].edge,left);
            set(plugin[get(tooltipname)].keep,true);
            set(plugin[get(tooltipname)].x,-30%);
            set(plugin[get(tooltipname)].y,0%);
           
            set(plugin[get(tooltipname)].autowidth,true);
            set(plugin[get(tooltipname)].autoheight,true);
           
            set(plugin[get(tooltipname)].background,true);
            set(plugin[get(tooltipname)].backgroundcolor,0x0b00fd);
            set(plugin[get(tooltipname)].roundedge,2);
            set(plugin[get(tooltipname)].backgroundalpha,0.6);
            set(plugin[get(tooltipname)].padding,5);
            set(plugin[get(tooltipname)].border,false);
            set(plugin[get(tooltipname)].glow,0);
            set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
            set(plugin[get(addnameimg)].wordwrap,false);
            set(plugin[get(tooltipname)].visible,false);
            
            if(device.mobile,
                set(plugin[get(tooltipname)].css,'text-align:center; color:#cccccc;  font-weight:bold; font-size:16px;');
                ,
                set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF;   font-size:14px;');
            );
           
            if(text == '' OR text === null,
                copy(plugin[get(tooltipname)].html,scene[get(linkedscene)].title);
            ,
                
                copy(plugin[get(tooltipname)].html,text);
                
            );    
            set(plugin[get(tooltipname)].enabled,false);
    </action>


    <action name="showtip">
        set(layer[get(name)].zorder,100);
        txtadd(tibname,tooltip_,get(name));set(layer[get(tibname)].visible,true);
    </action>
    <action name="hidtip">
        set(layer[get(name)].zorder,10);
        txtadd(tibname,tooltip_,get(name));set(layer[get(tibname)].visible,false);
    </action>



    <!--view-->
    <action name="initview_b">
		tween(view.hlookat, 363, 2.5, easeInOutQuad);
		tween(view.vlookat, 30, 2.5, easeInOutQuad);
		tween(view.fov,     90,  2.5, easeInOutQuad,,set(view.fovmax,140));
		tween(view.fisheye, 0.0, 2.5, easeInOutQuad,skin_view_normal);
		
		
		
	</action>
	
	<action name="initview2">
		tween(view.hlookat, 360, 2.5, easeInOutQuad);
		tween(view.vlookat, 30, 2.5, easeInOutQuad);
		tween(view.fov,     90,  2.5, easeInOutQuad,,set(view.fovmax,140));
		tween(view.fisheye, 0.0, 2.5, easeInOutQuad,skin_view_normal);
		
		delayedcall(3,startview(););
		
	</action>


	<action name="skin_changecontrolmode">
		switch(control.mousetype, moveto, drag2d);
		switch(control.touchtype, moveto, drag2d);
	</action>

	<action name="skin_view_look_straight">
		if(view.vlookat LT -80 OR view.vlookat GT +80,
			tween(view.vlookat, 0.0, 1.0, easeInOutSine);
			tween(view.fov,     100, distance(150,0.8));
		  );
	</action>

	<action name="skin_view_normal">
		skin_view_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.distortion,    0.0, distance(1.0,0.5));
	</action>

	<action name="skin_view_fisheye">
		skin_view_look_straight();
		tween(view.architectural, 0.0,  distance(1.0,0.5));
		tween(view.pannini,       0.0,  distance(1.0,0.5));
		tween(view.distortion,    0.35, distance(1.0,0.5));
	</action>

	<action name="skin_view_architectural">
		skin_view_look_straight();
		tween(view.architectural, 1.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.distortion,    0.0, distance(1.0,0.5));
	</action>

	<action name="skin_view_stereographic">
		skin_view_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       0.0, distance(1.0,0.5));
		tween(view.distortion,    1.0, distance(1.0,0.8));
	</action>

	<action name="skin_view_pannini">
		skin_view_look_straight();
		tween(view.architectural, 0.0, distance(1.0,0.5));
		tween(view.pannini,       1.0, distance(1.0,0.8));
		if(view.distortion LT 0.1,
			tween(view.distortion, 1.0, distance(1.0,0.8));
		  );
	</action>

	<action name="skin_view_littleplanet">
		tween(view.architectural, 0.0, 0);
		tween(view.pannini,       0.0, 0);
		tween(view.distortion,    1.0, 0);
		tween(view.fov,           150, 0);
		tween(view.vlookat,        90, 0);
		add(new_hlookat, view.hlookat, 123.0);
		tween(view.hlookat, get(new_hlookat), 0);
	</action>
</krpano>